<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cosmos.Extensions.CharMatchers</name>
    </assembly>
    <members>
        <member name="T:Cosmos.CharMatchers.CharMatcher">
            <summary>
            Char matcher
            </summary>
            <summary>
            Char matcher
            </summary>
            <summary>
            Char matcher
            </summary>
            <summary>
            Char matcher
            </summary>
            <summary>
            Char matcher
            </summary>
        </member>
        <member name="M:Cosmos.CharMatchers.CharMatcher.Is(System.Char)">
            <summary>
            Is
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.CharMatcher.IsNot(System.Char)">
            <summary>
            Is not
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.CharMatcher.AnyOf(System.String)">
            <summary>
            Any of
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.CharMatcher.NoneOf(System.String)">
            <summary>
            None of
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="P:Cosmos.CharMatchers.CharMatcher.WHITESPACE">
            <summary>
            Whitespace
            </summary>
        </member>
        <member name="T:Cosmos.CharMatchers.IAnyOfModeCharMatcher">
            <summary>
            Interface to flag 'AnyOf' mode of char matcher
            </summary>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.Negate">
            <summary>
            Negate
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.InRange(System.Char,System.Char)">
            <summary>
            In range
            </summary>
            <param name="startInclusive"></param>
            <param name="endInclusive"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.ForPredicate(System.Func{System.Char,System.Boolean})">
            <summary>
            for predicate
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.MatchesAnyOf(System.String)">
            <summary>
            Matches any of
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.MatchesAllOf(System.String)">
            <summary>
            Matches all of
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.MatchesNoneOf(System.String)">
            <summary>
            Matches none of
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.IndexIn(System.String)">
            <summary>
            Index in
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.IndexIn(System.String,System.Int32)">
            <summary>
            Index in
            </summary>
            <param name="sequence"></param>
            <param name="startIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.LastIndexIn(System.String)">
            <summary>
            Last index in
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.CountIn(System.String)">
            <summary>
            Count in
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.RemoveFrom(System.String)">
            <summary>
            Remove from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.RetainFrom(System.String)">
            <summary>
            Retain from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.ReplaceFrom(System.String,System.Char)">
            <summary>
            Replace from
            </summary>
            <param name="sequence"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.ReplaceFrom(System.String,System.String)">
            <summary>
            Replace from
            </summary>
            <param name="sequence"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.TrimFrom(System.String)">
            <summary>
            Trim from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.TrimLeadingForm(System.String)">
            <summary>
            Trim leading from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.TrimTrailingFrom(System.String)">
            <summary>
            Trim trailing from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.CollapseFrom(System.String,System.Char)">
            <summary>
            Collapse from
            </summary>
            <param name="sequence"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.TrimAndCollapseFrom(System.String,System.Char)">
            <summary>
            Trim and collapse from
            </summary>
            <param name="sequence"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.Apply(System.Char)">
            <summary>
            Apply
            </summary>
            <param name="character"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.CharMatchers.ICharMatcher">
            <summary>
            Interface for char matcher
            </summary>
        </member>
        <member name="T:Cosmos.CharMatchers.IIsModeCharMatcher">
            <summary>
            Interface to flag 'Is' mode of char matcher
            </summary>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.Negate">
            <summary>
            Negate
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.InRange(System.Char,System.Char)">
            <summary>
            In range
            </summary>
            <param name="startInclusive"></param>
            <param name="endInclusive"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.ForPredicate(System.Func{System.Char,System.Boolean})">
            <summary>
            For predicate
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.MatchesAnyOf(System.String)">
            <summary>
            Matches any of
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.MatchesAllOf(System.String)">
            <summary>
            Matches all of
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.MatchesNoneOf(System.String)">
            <summary>
            Matches none of
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.IndexIn(System.String)">
            <summary>
            Index in
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.IndexIn(System.String,System.Int32)">
            <summary>
            Index in
            </summary>
            <param name="sequence"></param>
            <param name="startIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.LastIndexIn(System.String)">
            <summary>
            Last index in
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.CountIn(System.String)">
            <summary>
            Count in
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.RemoveFrom(System.String)">
            <summary>
            Remove from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.RetainFrom(System.String)">
            <summary>
            Retain from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.ReplaceFrom(System.String,System.Char)">
            <summary>
            Replace from
            </summary>
            <param name="sequence"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.ReplaceFrom(System.String,System.String)">
            <summary>
            Replace from
            </summary>
            <param name="sequence"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.TrimFrom(System.String)">
            <summary>
            Trim from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.TrimLeadingForm(System.String)">
            <summary>
            Trim leading from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.TrimTrailingFrom(System.String)">
            <summary>
            Trim trailing from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.CollapseFrom(System.String,System.Char)">
            <summary>
            Collapse from
            </summary>
            <param name="sequence"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.TrimAndCollapseFrom(System.String,System.Char)">
            <summary>
            Trim and collapse from
            </summary>
            <param name="sequence"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.Apply(System.Char)">
            <summary>
            Apply
            </summary>
            <param name="character"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.CharMatchers.IIsNotModeCharMatcher">
            <summary>
            Interface to flag 'Not' mode of char matcher
            </summary>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.Negate">
            <summary>
            Negate
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.InRange(System.Char,System.Char)">
            <summary>
            In range
            </summary>
            <param name="startInclusive"></param>
            <param name="endInclusive"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.ForPredicate(System.Func{System.Char,System.Boolean})">
            <summary>
            For predicate
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.MatchesAnyOf(System.String)">
            <summary>
            Matches any of
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.MatchesAllOf(System.String)">
            <summary>
            Matches all of
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.MatchesNoneOf(System.String)">
            <summary>
            Matches none of
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.IndexIn(System.String)">
            <summary>
            Index in
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.IndexIn(System.String,System.Int32)">
            <summary>
            Index in
            </summary>
            <param name="sequence"></param>
            <param name="startIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.LastIndexIn(System.String)">
            <summary>
            Last index in
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.CountIn(System.String)">
            <summary>
            Count in
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.RemoveFrom(System.String)">
            <summary>
            Remove from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.RetainFrom(System.String)">
            <summary>
            Retain from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.ReplaceFrom(System.String,System.Char)">
            <summary>
            Replace from
            </summary>
            <param name="sequence"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.ReplaceFrom(System.String,System.String)">
            <summary>
            Replace from
            </summary>
            <param name="sequence"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.TrimFrom(System.String)">
            <summary>
            Trim from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.TrimLeadingForm(System.String)">
            <summary>
            Trim trailing from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.TrimTrailingFrom(System.String)">
            <summary>
            Trim trailing from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.CollapseFrom(System.String,System.Char)">
            <summary>
            Collapse from
            </summary>
            <param name="sequence"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.TrimAndCollapseFrom(System.String,System.Char)">
            <summary>
            Trim and collapse from
            </summary>
            <param name="sequence"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.Apply(System.Char)">
            <summary>
            Apply
            </summary>
            <param name="character"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.CharMatchers.INoneOfModeCharMatcher">
            <summary>
            Interface to flag 'None' mode of char matcher
            </summary>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.Negate">
            <summary>
            Negate
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.InRange(System.Char,System.Char)">
            <summary>
            In range
            </summary>
            <param name="startInclusive"></param>
            <param name="endInclusive"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.ForPredicate(System.Func{System.Char,System.Boolean})">
            <summary>
            For predicate
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.MatchesAnyOf(System.String)">
            <summary>
            Matches any of
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.MatchesAllOf(System.String)">
            <summary>
            Matches all of
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.MatchesNoneOf(System.String)">
            <summary>
            Matches none of
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.IndexIn(System.String)">
            <summary>
            Index in
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.IndexIn(System.String,System.Int32)">
            <summary>
            Index in
            </summary>
            <param name="sequence"></param>
            <param name="startIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.LastIndexIn(System.String)">
            <summary>
            Last index in
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.CountIn(System.String)">
            <summary>
            Count in
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.RemoveFrom(System.String)">
            <summary>
            Remove from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.RetainFrom(System.String)">
            <summary>
            Retain from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.ReplaceFrom(System.String,System.Char)">
            <summary>
            Replace from
            </summary>
            <param name="sequence"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.ReplaceFrom(System.String,System.String)">
            <summary>
            Replace from
            </summary>
            <param name="sequence"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.TrimFrom(System.String)">
            <summary>
            Trim from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.TrimLeadingForm(System.String)">
            <summary>
            Trim leading from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.TrimTrailingFrom(System.String)">
            <summary>
            Trim trailing from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.CollapseFrom(System.String,System.Char)">
            <summary>
            Collapse from
            </summary>
            <param name="sequence"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.TrimAndCollapseFrom(System.String,System.Char)">
            <summary>
            Trim and collapse from
            </summary>
            <param name="sequence"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.Apply(System.Char)">
            <summary>
            Apply
            </summary>
            <param name="character"></param>
            <returns></returns>
        </member>
    </members>
</doc>
