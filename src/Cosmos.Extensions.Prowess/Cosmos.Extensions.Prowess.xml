<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cosmos.Extensions.Prowess</name>
    </assembly>
    <members>
        <member name="T:Cosmos.CharMatchers.CharMatcher">
            <summary>
            Char matcher
            </summary>
            <summary>
            Char matcher
            </summary>
            <summary>
            Char matcher
            </summary>
            <summary>
            Char matcher
            </summary>
            <summary>
            Char matcher
            </summary>
        </member>
        <member name="M:Cosmos.CharMatchers.CharMatcher.Is(System.Char)">
            <summary>
            Is
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.CharMatcher.IsNot(System.Char)">
            <summary>
            Is not
            </summary>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.CharMatcher.AnyOf(System.String)">
            <summary>
            Any of
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.CharMatcher.NoneOf(System.String)">
            <summary>
            None of
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="P:Cosmos.CharMatchers.CharMatcher.WHITESPACE">
            <summary>
            Whitespace
            </summary>
        </member>
        <member name="T:Cosmos.CharMatchers.IAnyOfModeCharMatcher">
            <summary>
            Interface to flag 'AnyOf' mode of char matcher
            </summary>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.Negate">
            <summary>
            Negate
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.InRange(System.Char,System.Char)">
            <summary>
            In range
            </summary>
            <param name="startInclusive"></param>
            <param name="endInclusive"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.ForPredicate(System.Func{System.Char,System.Boolean})">
            <summary>
            for predicate
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.MatchesAnyOf(System.String)">
            <summary>
            Matches any of
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.MatchesAllOf(System.String)">
            <summary>
            Matches all of
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.MatchesNoneOf(System.String)">
            <summary>
            Matches none of
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.IndexIn(System.String)">
            <summary>
            Index in
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.IndexIn(System.String,System.Int32)">
            <summary>
            Index in
            </summary>
            <param name="sequence"></param>
            <param name="startIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.LastIndexIn(System.String)">
            <summary>
            Last index in
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.CountIn(System.String)">
            <summary>
            Count in
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.RemoveFrom(System.String)">
            <summary>
            Remove from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.RetainFrom(System.String)">
            <summary>
            Retain from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.ReplaceFrom(System.String,System.Char)">
            <summary>
            Replace from
            </summary>
            <param name="sequence"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.ReplaceFrom(System.String,System.String)">
            <summary>
            Replace from
            </summary>
            <param name="sequence"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.TrimFrom(System.String)">
            <summary>
            Trim from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.TrimLeadingForm(System.String)">
            <summary>
            Trim leading from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.TrimTrailingFrom(System.String)">
            <summary>
            Trim trailing from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.CollapseFrom(System.String,System.Char)">
            <summary>
            Collapse from
            </summary>
            <param name="sequence"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.TrimAndCollapseFrom(System.String,System.Char)">
            <summary>
            Trim and collapse from
            </summary>
            <param name="sequence"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IAnyOfModeCharMatcher.Apply(System.Char)">
            <summary>
            Apply
            </summary>
            <param name="character"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.CharMatchers.ICharMatcher">
            <summary>
            Interface for char matcher
            </summary>
        </member>
        <member name="T:Cosmos.CharMatchers.IIsModeCharMatcher">
            <summary>
            Interface to flag 'Is' mode of char matcher
            </summary>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.Negate">
            <summary>
            Negate
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.InRange(System.Char,System.Char)">
            <summary>
            In range
            </summary>
            <param name="startInclusive"></param>
            <param name="endInclusive"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.ForPredicate(System.Func{System.Char,System.Boolean})">
            <summary>
            For predicate
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.MatchesAnyOf(System.String)">
            <summary>
            Matches any of
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.MatchesAllOf(System.String)">
            <summary>
            Matches all of
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.MatchesNoneOf(System.String)">
            <summary>
            Matches none of
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.IndexIn(System.String)">
            <summary>
            Index in
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.IndexIn(System.String,System.Int32)">
            <summary>
            Index in
            </summary>
            <param name="sequence"></param>
            <param name="startIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.LastIndexIn(System.String)">
            <summary>
            Last index in
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.CountIn(System.String)">
            <summary>
            Count in
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.RemoveFrom(System.String)">
            <summary>
            Remove from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.RetainFrom(System.String)">
            <summary>
            Retain from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.ReplaceFrom(System.String,System.Char)">
            <summary>
            Replace from
            </summary>
            <param name="sequence"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.ReplaceFrom(System.String,System.String)">
            <summary>
            Replace from
            </summary>
            <param name="sequence"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.TrimFrom(System.String)">
            <summary>
            Trim from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.TrimLeadingForm(System.String)">
            <summary>
            Trim leading from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.TrimTrailingFrom(System.String)">
            <summary>
            Trim trailing from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.CollapseFrom(System.String,System.Char)">
            <summary>
            Collapse from
            </summary>
            <param name="sequence"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.TrimAndCollapseFrom(System.String,System.Char)">
            <summary>
            Trim and collapse from
            </summary>
            <param name="sequence"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsModeCharMatcher.Apply(System.Char)">
            <summary>
            Apply
            </summary>
            <param name="character"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.CharMatchers.IIsNotModeCharMatcher">
            <summary>
            Interface to flag 'Not' mode of char matcher
            </summary>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.Negate">
            <summary>
            Negate
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.InRange(System.Char,System.Char)">
            <summary>
            In range
            </summary>
            <param name="startInclusive"></param>
            <param name="endInclusive"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.ForPredicate(System.Func{System.Char,System.Boolean})">
            <summary>
            For predicate
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.MatchesAnyOf(System.String)">
            <summary>
            Matches any of
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.MatchesAllOf(System.String)">
            <summary>
            Matches all of
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.MatchesNoneOf(System.String)">
            <summary>
            Matches none of
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.IndexIn(System.String)">
            <summary>
            Index in
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.IndexIn(System.String,System.Int32)">
            <summary>
            Index in
            </summary>
            <param name="sequence"></param>
            <param name="startIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.LastIndexIn(System.String)">
            <summary>
            Last index in
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.CountIn(System.String)">
            <summary>
            Count in
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.RemoveFrom(System.String)">
            <summary>
            Remove from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.RetainFrom(System.String)">
            <summary>
            Retain from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.ReplaceFrom(System.String,System.Char)">
            <summary>
            Replace from
            </summary>
            <param name="sequence"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.ReplaceFrom(System.String,System.String)">
            <summary>
            Replace from
            </summary>
            <param name="sequence"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.TrimFrom(System.String)">
            <summary>
            Trim from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.TrimLeadingForm(System.String)">
            <summary>
            Trim trailing from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.TrimTrailingFrom(System.String)">
            <summary>
            Trim trailing from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.CollapseFrom(System.String,System.Char)">
            <summary>
            Collapse from
            </summary>
            <param name="sequence"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.TrimAndCollapseFrom(System.String,System.Char)">
            <summary>
            Trim and collapse from
            </summary>
            <param name="sequence"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.IIsNotModeCharMatcher.Apply(System.Char)">
            <summary>
            Apply
            </summary>
            <param name="character"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.CharMatchers.INoneOfModeCharMatcher">
            <summary>
            Interface to flag 'None' mode of char matcher
            </summary>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.Negate">
            <summary>
            Negate
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.InRange(System.Char,System.Char)">
            <summary>
            In range
            </summary>
            <param name="startInclusive"></param>
            <param name="endInclusive"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.ForPredicate(System.Func{System.Char,System.Boolean})">
            <summary>
            For predicate
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.MatchesAnyOf(System.String)">
            <summary>
            Matches any of
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.MatchesAllOf(System.String)">
            <summary>
            Matches all of
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.MatchesNoneOf(System.String)">
            <summary>
            Matches none of
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.IndexIn(System.String)">
            <summary>
            Index in
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.IndexIn(System.String,System.Int32)">
            <summary>
            Index in
            </summary>
            <param name="sequence"></param>
            <param name="startIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.LastIndexIn(System.String)">
            <summary>
            Last index in
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.CountIn(System.String)">
            <summary>
            Count in
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.RemoveFrom(System.String)">
            <summary>
            Remove from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.RetainFrom(System.String)">
            <summary>
            Retain from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.ReplaceFrom(System.String,System.Char)">
            <summary>
            Replace from
            </summary>
            <param name="sequence"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.ReplaceFrom(System.String,System.String)">
            <summary>
            Replace from
            </summary>
            <param name="sequence"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.TrimFrom(System.String)">
            <summary>
            Trim from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.TrimLeadingForm(System.String)">
            <summary>
            Trim leading from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.TrimTrailingFrom(System.String)">
            <summary>
            Trim trailing from
            </summary>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.CollapseFrom(System.String,System.Char)">
            <summary>
            Collapse from
            </summary>
            <param name="sequence"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.TrimAndCollapseFrom(System.String,System.Char)">
            <summary>
            Trim and collapse from
            </summary>
            <param name="sequence"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.CharMatchers.INoneOfModeCharMatcher.Apply(System.Char)">
            <summary>
            Apply
            </summary>
            <param name="character"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Collections.CollectionExtensions">
            <summary>
            Collection extensions
            </summary>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.JoinToString(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Join to string
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.JoinToString(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Join to string
            </summary>
            <param name="list"></param>
            <param name="delimiter"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.JoinToString(System.Collections.Generic.IEnumerable{System.String},System.Func{System.String,System.Boolean},System.Func{System.String,System.String})">
            <summary>
            Join to string
            </summary>
            <param name="list"></param>
            <param name="predicate"></param>
            <param name="replaceFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.JoinToString(System.Collections.Generic.IEnumerable{System.String},System.String,System.Func{System.String,System.Boolean},System.Func{System.String,System.String})">
            <summary>
            Join to string
            </summary>
            <param name="list"></param>
            <param name="delimiter"></param>
            <param name="predicate"></param>
            <param name="replaceFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.JoinToString``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Join to string
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.JoinToString``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Join to string
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="delimiter"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.JoinToString``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Func{``0,System.Boolean},System.Func{``0,``0})">
            <summary>
            Join to string
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="delimiter"></param>
            <param name="predicate"></param>
            <param name="replaceFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.JoinToString``1(System.Collections.Generic.IEnumerable{``0},System.String,Cosmos.ITypeConverter{``0,System.String},System.Func{``0,``0})">
            <summary>
            Join to string
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="delimiter"></param>
            <param name="converter"></param>
            <param name="replaceFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.JoinToString``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Func{``0,System.String},System.Func{``0,``0})">
            <summary>
            Join to string
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="delimiter"></param>
            <param name="to"></param>
            <param name="replaceFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.JoinToString``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Func{``0,System.Boolean},Cosmos.ITypeConverter{``0,System.String},System.Func{``0,``0})">
            <summary>
            Join to string
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="delimiter"></param>
            <param name="predicate"></param>
            <param name="converter"></param>
            <param name="replaceFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.JoinOnePerLine``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Join to string
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.JoinToStringFormat``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Join to string
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.JoinToStringFormat``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Join to string
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="delimiter"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.JoinToStringFormat``1(System.Collections.Generic.IEnumerable{``0},System.String,System.IFormatProvider)">
            <summary>
            Join to string
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="delimiter"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.JoinToString``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Func{``0,System.Boolean},System.Func{``0,System.String},System.Func{``0,``0})">
            <summary>
            Join to string
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="delimiter"></param>
            <param name="predicate"></param>
            <param name="to"></param>
            <param name="replaceFunc"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Enums">
            <summary>
            Enum utilities
            </summary>
        </member>
        <member name="M:Cosmos.Enums.Of``1(System.String,System.Boolean,``0)">
            <summary>
            Of
            </summary>
            <param name="member"></param>
            <param name="ignoreCase"></param>
            <param name="defaultVal"></param>
            <typeparam name="TEnum"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Enums.Of``1(System.Object,``0)">
            <summary>
            Of
            </summary>
            <param name="member"></param>
            <param name="defaultVal"></param>
            <typeparam name="TEnum"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Enums.Of(System.String,System.Type,System.Boolean,System.Object)">
            <summary>
            Of
            </summary>
            <param name="member"></param>
            <param name="enumType"></param>
            <param name="ignoreCase"></param>
            <param name="defaultVal"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Enums.Of(System.Object,System.Type,System.Object)">
            <summary>
            Of
            </summary>
            <param name="member"></param>
            <param name="enumType"></param>
            <param name="defaultVal"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Enums.NameOf``1(``0)">
            <summary>
            Name of
            </summary>
            <param name="member"></param>
            <typeparam name="TEnum"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Enums.NameOf(System.Type,System.Object)">
            <summary>
            Name of
            </summary>
            <param name="enumType"></param>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Enums.DescriptionOf``1(``0)">
            <summary>
            Get description via <see cref="T:System.ComponentModel.DescriptionAttribute"/> <br />
            获取描述，使用 <see cref="T:System.ComponentModel.DescriptionAttribute"/> 特性设置描述
            </summary>
            <param name="member"></param>
            <typeparam name="TEnum"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Enums.DescriptionOf(System.Type,System.Object)">
            <summary>
            Get description via <see cref="T:System.ComponentModel.DescriptionAttribute"/> <br />
            获取描述，使用 <see cref="T:System.ComponentModel.DescriptionAttribute"/> 特性设置描述
            </summary>
            <param name="enumType"></param>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.IdUtils.CombStyle">
            <summary>
            Comb styles
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.CombStyle.NormalStyle">
            <summary>
            Normal style
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.CombStyle.UnixStyle">
            <summary>
            Unix style
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.CombStyle.SqlStyle">
            <summary>
            Sql style
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.CombStyle.LegacySqlStyle">
            <summary>
            Legacy sql style
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.CombStyle.PostgreSqlStyle">
            <summary>
            PostgreSql style
            </summary>
        </member>
        <member name="T:Cosmos.IdUtils.GuidBytesStyle">
            <summary>
            Guid bytes styles
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.GuidBytesStyle.LittleEndianByteArray">
            <summary>
            Little endian byte array
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.GuidBytesStyle.BigEndianByteArray">
            <summary>
            Big endian by array
            </summary>
        </member>
        <member name="T:Cosmos.IdUtils.GuidImplements.Core.DecodedGuid">
            <summary>
            A <see cref="T:System.Guid"/> that has been decoded into its fields.
            </summary>
        </member>
        <member name="M:Cosmos.IdUtils.GuidImplements.Core.DecodedGuid.#ctor(System.Guid@)">
            <summary>
            Create a new <see cref="T:Cosmos.IdUtils.GuidImplements.Core.DecodedGuid"/> instance.
            </summary>
            <param name="guid"></param>
        </member>
        <member name="M:Cosmos.IdUtils.GuidImplements.Core.DecodedGuid.#ctor(System.Byte[])">
            <summary>
            Create a new <see cref="T:Cosmos.IdUtils.GuidImplements.Core.DecodedGuid"/> instance.
            </summary>
            <param name="littleEndianGuidBytes"></param>
        </member>
        <member name="M:Cosmos.IdUtils.GuidImplements.Core.DecodedGuid.ToGuid">
            <summary>
            Converts the decoded GUID back to a <see cref="T:System.Guid"/>.
            </summary>
        </member>
        <member name="M:Cosmos.IdUtils.GuidImplements.Core.DecodedGuid.ToLittleEndianByteArray">
            <summary>
            Converts the decoded GUID to a binary little-endian representation.
            </summary>
        </member>
        <member name="M:Cosmos.IdUtils.GuidImplements.Core.DecodedGuid.ToBigEndianByteArray">
            <summary>
            Converts the decoded GUID to a binary big-endian representation.
            </summary>
        </member>
        <member name="P:Cosmos.IdUtils.GuidImplements.Core.DecodedGuid.Variant">
            <summary>
            Gets the 3-bit Variant field of the GUID.
            </summary>
        </member>
        <member name="P:Cosmos.IdUtils.GuidImplements.Core.DecodedGuid.Version">
            <summary>
            Gets the 4-bit Version field of the GUID. This is only valid if <see cref="P:Cosmos.IdUtils.GuidImplements.Core.DecodedGuid.Variant"/> returns <see cref="F:Cosmos.IdUtils.GuidImplements.Internals.GuidVariant.Rfc4122"/>.
            </summary>
        </member>
        <member name="P:Cosmos.IdUtils.GuidImplements.Core.DecodedGuid.Domain">
            <summary>
            Gets the Domain field of the security GUID. This is only valid if <see cref="P:Cosmos.IdUtils.GuidImplements.Core.DecodedGuid.Version"/> returns <see cref="F:Cosmos.IdUtils.GuidVersion.DceSecurity"/>.
            </summary>
        </member>
        <member name="P:Cosmos.IdUtils.GuidImplements.Core.DecodedGuid.LocalIdentifier">
            <summary>
            Gets the Local Identifier field of the security GUID. This is only valid if <see cref="P:Cosmos.IdUtils.GuidImplements.Core.DecodedGuid.Version"/> returns <see cref="F:Cosmos.IdUtils.GuidVersion.DceSecurity"/>
            </summary>
        </member>
        <member name="P:Cosmos.IdUtils.GuidImplements.Core.DecodedGuid.Timestamp">
            <summary>
            Gets the 60-bit Timestamp field of the GUID. This is only valid if <see cref="P:Cosmos.IdUtils.GuidImplements.Core.DecodedGuid.Version"/> returns <see cref="F:Cosmos.IdUtils.GuidVersion.TimeBased"/>.
            </summary>
        </member>
        <member name="P:Cosmos.IdUtils.GuidImplements.Core.DecodedGuid.PartialTimestamp">
            <summary>
            Gets the 28-bit Timestamp field of the GUID; the lowest 32 bits of the returned value are always zero. This is only valid if <see cref="P:Cosmos.IdUtils.GuidImplements.Core.DecodedGuid.Version"/> returns <see cref="F:Cosmos.IdUtils.GuidVersion.DceSecurity"/>.
            </summary>
        </member>
        <member name="P:Cosmos.IdUtils.GuidImplements.Core.DecodedGuid.CreateTime">
            <summary>
            Gets the date and time that this GUID was created, in UTC. This is only valid if <see cref="P:Cosmos.IdUtils.GuidImplements.Core.DecodedGuid.Version"/> returns <see cref="F:Cosmos.IdUtils.GuidVersion.TimeBased"/>.
            </summary>
        </member>
        <member name="P:Cosmos.IdUtils.GuidImplements.Core.DecodedGuid.PartialCreateTime">
            <summary>
            Gets the approximate date and time that this GUID was created, in UTC. This is only valid if <see cref="P:Cosmos.IdUtils.GuidImplements.Core.DecodedGuid.Version"/> returns <see cref="F:Cosmos.IdUtils.GuidVersion.DceSecurity"/>.
            </summary>
        </member>
        <member name="P:Cosmos.IdUtils.GuidImplements.Core.DecodedGuid.ClockSequence">
            <summary>
            Gets the 14-bit Clock Sequence field of the GUID. This is only valid if <see cref="P:Cosmos.IdUtils.GuidImplements.Core.DecodedGuid.Version"/> returns <see cref="F:Cosmos.IdUtils.GuidVersion.TimeBased"/>.
            </summary>
        </member>
        <member name="P:Cosmos.IdUtils.GuidImplements.Core.DecodedGuid.PartialClockSequence">
            <summary>
            Gets the 6-bit Clock Sequence field of the GUID. The lowest 8 bits of the returned value are always 0. This is only valid if <see cref="P:Cosmos.IdUtils.GuidImplements.Core.DecodedGuid.Version"/> returns <see cref="F:Cosmos.IdUtils.GuidVersion.DceSecurity"/>.
            </summary>
        </member>
        <member name="P:Cosmos.IdUtils.GuidImplements.Core.DecodedGuid.Node">
            <summary>
            Gets the 6-byte (48-bit) Node field of the GUID. This is only valid if <see cref="P:Cosmos.IdUtils.GuidImplements.Core.DecodedGuid.Version"/> returns <see cref="F:Cosmos.IdUtils.GuidVersion.TimeBased"/> or <see cref="F:Cosmos.IdUtils.GuidVersion.DceSecurity"/>.
            </summary>
        </member>
        <member name="P:Cosmos.IdUtils.GuidImplements.Core.DecodedGuid.NodeIsMac">
            <summary>
            Returns <c>true</c> if the Node field is a MAC address; returns <c>false</c> if the Node field is a random value. This is only valid if <see cref="P:Cosmos.IdUtils.GuidImplements.Core.DecodedGuid.Version"/> returns <see cref="F:Cosmos.IdUtils.GuidVersion.TimeBased"/> or <see cref="F:Cosmos.IdUtils.GuidVersion.DceSecurity"/>.
            </summary>
        </member>
        <member name="T:Cosmos.IdUtils.GuidImplements.Internals.DceDomain">
            <summary>
            Known values of DCE domains.
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.GuidImplements.Internals.DceDomain.Person">
            <summary>
            The principal domain. On POSIX machines, this is the POSIX UID domain.
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.GuidImplements.Internals.DceDomain.Group">
            <summary>
            The group domain. On POSIX machines, this is the POSIX GID domain.
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.GuidImplements.Internals.DceDomain.Organization">
            <summary>
            The organization domain.
            </summary>
        </member>
        <member name="M:Cosmos.IdUtils.GuidImplements.Internals.GuidExtensions.ToBigEndianByteArray(System.Guid@)">
            <summary>
            Returns a 16-element byte array that contains the value of the GUID, in big-endian format.
            </summary>
            <param name="guid">The GUID.</param>
        </member>
        <member name="M:Cosmos.IdUtils.GuidImplements.Internals.GuidExtensions.Decode(System.Guid@)">
            <summary>
            Decodes a GUID into its fields.
            </summary>
            <param name="guid">The GUID to decode.</param>
        </member>
        <member name="T:Cosmos.IdUtils.GuidImplements.Internals.GuidNamespaces">
            <summary>
            Guid namespace
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.GuidImplements.Internals.GuidNamespaces.Dns">
            <summary>
            For names that are fully-qualified domain names.
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.GuidImplements.Internals.GuidNamespaces.Url">
            <summary>
            For names that are URLs.
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.GuidImplements.Internals.GuidNamespaces.Oid">
            <summary>
            For names that are ISO OIDs.
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.GuidImplements.Internals.GuidNamespaces.X500">
            <summary>
            For names that are X.500 DNs (in DER or a text output format).
            </summary>
        </member>
        <member name="M:Cosmos.IdUtils.GuidImplements.Internals.GuidUtility.Copy(System.Byte[])">
            <summary>
            Creates a new array that is a copy of the specified array.
            </summary>
            <param name="guid">The GUID, as a byte array.</param>
        </member>
        <member name="M:Cosmos.IdUtils.GuidImplements.Internals.GuidUtility.CopyWithEndianSwap(System.Byte[])">
            <summary>
            Creates a new array that is an endian conversion of the specified array, converting big-endian to little-endian or vice versa.
            </summary>
            <param name="guid">The GUID, as a byte array.</param>
        </member>
        <member name="M:Cosmos.IdUtils.GuidImplements.Internals.GuidUtility.EndianSwap(System.Byte[])">
            <summary>
            Converts a big-endian GUID to a little-endian GUID, or vice versa. This method modifies the array in-place.
            </summary>
            <param name="guid">The GUID, as a byte array.</param>
        </member>
        <member name="T:Cosmos.IdUtils.GuidImplements.Internals.GuidVariant">
            <summary>
            Known values for the <see cref="T:System.Guid"/> Variant field.
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.GuidImplements.Internals.GuidVariant.NcsBackwardCompatibility">
            <summary>
            Reserved for NCS backward compatibility.
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.GuidImplements.Internals.GuidVariant.Rfc4122">
            <summary>
            A GUID conforming to RFC 4122.
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.GuidImplements.Internals.GuidVariant.MicrosoftBackwardCompatibility">
            <summary>
            Reserved for Microsoft backward compatibility.
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.GuidImplements.Internals.GuidVariant.ReservedForFutureDefinition">
            <summary>
            Reserved for future definition.
            </summary>
        </member>
        <member name="T:Cosmos.IdUtils.GuidImplements.UnixTimeStampStyleProvider">
            <summary>
            Unix timestamp style provider
            </summary>
        </member>
        <member name="M:Cosmos.IdUtils.GuidImplements.UnixTimeStampStyleProvider.Create">
            <summary>
            Create
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.IdUtils.GuidImplements.UnixTimeStampStyleProvider.Create(System.Guid)">
            <summary>
            Create
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.IdUtils.GuidImplements.UnixTimeStampStyleProvider.Create(Cosmos.IdUtils.NoRepeatMode)">
            <summary>
            Create
            </summary>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.IdUtils.GuidImplements.UnixTimeStampStyleProvider.Create(System.Guid,Cosmos.IdUtils.NoRepeatMode)">
            <summary>
            Create
            </summary>
            <param name="value"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.IdUtils.GuidImplements.UnixTimeStampStyleProvider.Create(System.DateTime)">
            <summary>
            Create
            </summary>
            <param name="secureTimestamp"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.IdUtils.GuidImplements.UnixTimeStampStyleProvider.Create(System.Guid,System.DateTime)">
            <summary>
            Create
            </summary>
            <param name="value"></param>
            <param name="secureTimestamp"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.IdUtils.GuidProvider">
            <summary>
            Guid provider
            </summary>
            <summary>
            Guid provider
            </summary>
        </member>
        <member name="M:Cosmos.IdUtils.GuidProvider.Create(Cosmos.IdUtils.CombStyle,Cosmos.IdUtils.NoRepeatMode)">
            <summary>
            Create
            </summary>
            <param name="style"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.IdUtils.GuidProvider.Create(System.Guid,Cosmos.IdUtils.CombStyle,Cosmos.IdUtils.NoRepeatMode)">
            <summary>
            Create
            </summary>
            <param name="value"></param>
            <param name="style"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.IdUtils.GuidProvider.Create(System.DateTime,Cosmos.IdUtils.CombStyle)">
            <summary>
            Create
            </summary>
            <param name="secureTimestamp"></param>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.IdUtils.GuidProvider.Create(System.Guid,System.DateTime,Cosmos.IdUtils.CombStyle)">
            <summary>
            Create
            </summary>
            <param name="value"></param>
            <param name="secureTimestamp"></param>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.IdUtils.GuidProvider.CreateRandom">
            <summary>
            Create random style guid
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.IdUtils.GuidProvider.Create(Cosmos.IdUtils.GuidStyle,Cosmos.IdUtils.NoRepeatMode)">
            <summary>
            Create
            </summary>
            <param name="style"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.IdUtils.GuidProvider.Create(System.DateTime,Cosmos.IdUtils.GuidStyle)">
            <summary>
            Create
            </summary>
            <param name="secureTimestamp"></param>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.IdUtils.GuidProvider.Create(System.Byte[],Cosmos.IdUtils.GuidBytesStyle)">
            <summary>
            Create
            </summary>
            <param name="endianGuidBytes"></param>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.IdUtils.GuidProvider.Create(System.Guid,System.Byte[],Cosmos.IdUtils.GuidVersion)">
            <summary>
            Create
            </summary>
            <param name="namespace"></param>
            <param name="name"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.IdUtils.GuidStyle">
            <summary>
            Guid style
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.GuidStyle.BasicStyle">
            <summary>
            Basic
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.GuidStyle.TimeStampStyle">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.GuidStyle.UnixTimeStampStyle">
            <summary>
            Unix timestamp
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.GuidStyle.SqlTimeStampStyle">
            <summary>
            Sql timestamp
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.GuidStyle.LegacySqlTimeStampStyle">
            <summary>
            Legacy sql timestamp
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.GuidStyle.PostgreSqlTimeStampStyle">
            <summary>
            PostgreSql timestamp
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.GuidStyle.CombStyle">
            <summary>
            Comb
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.GuidStyle.SequentialAsStringStyle">
            <summary>
            Sequential as string
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.GuidStyle.SequentialAsBinaryStyle">
            <summary>
            Sequential as binary
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.GuidStyle.SequentialAsEndStyle">
            <summary>
            Sequential as end
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.GuidStyle.EquifaxStyle">
            <summary>
            Equifax
            </summary>
        </member>
        <member name="T:Cosmos.IdUtils.GuidVersion">
            <summary>
            Known values for the <see cref="T:System.Guid"/> Version field.
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.GuidVersion.TimeBased">
            <summary>
            Time-based (sequential) GUID.
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.GuidVersion.DceSecurity">
            <summary>
            DCE Security GUID with embedded POSIX UID/GID. See "DCE 1.1: Authentication and Security Services", Chapter 5 and "DCE 1.1: RPC", Appendix A.
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.GuidVersion.NameBasedMd5">
            <summary>
            Name-based GUID using the MD5 hashing algorithm.
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.GuidVersion.Random">
            <summary>
            Random GUID.
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.GuidVersion.NameBasedSha1">
            <summary>
            Name-based GUID using the SHA-1 hashing algorithm.
            </summary>
        </member>
        <member name="T:Cosmos.IdUtils.ModelIdAccessor">
            <summary>
            Model Id Accessor
            </summary>
        </member>
        <member name="M:Cosmos.IdUtils.ModelIdAccessor.#ctor">
            <summary>
            Create a new <see cref="T:Cosmos.IdUtils.ModelIdAccessor"/> instance.
            </summary>
        </member>
        <member name="M:Cosmos.IdUtils.ModelIdAccessor.GetNextIndex">
            <summary>
            Get next index
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.IdUtils.ModelIdAccessor.GetTimeSpot">
            <summary>
            Get time spot
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.IdUtils.ModelIdAccessor.RefreshTimeSpot">
            <summary>
            Refresh time spot
            </summary>
        </member>
        <member name="T:Cosmos.IdUtils.NoRepeatMode">
            <summary>
            No repeat mode
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.NoRepeatMode.Off">
            <summary>
            Off<br />
            关
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.NoRepeatMode.On">
            <summary>
            On<br />
            开
            </summary>
        </member>
        <member name="T:Cosmos.IdUtils.RandomIdProvider">
            <summary>
            Random Id Provider
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.RandomIdProvider.ALLNUMBERS">
            <summary>
            All numbers from 0 to 9
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.RandomIdProvider.ALLWORDS">
            <summary> 
            1234567890qwertyuiopasdfghjklzxcvbnm1234567890QWERTYUIOPASDFGHJKLZXCVBNM
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.RandomIdProvider.SIMPLEWORDS">
            <summary> 
            2345678wertyuiopasdfghjkzxcvbnm23456780QWERTYUPASDFGHJKLZXCVBNM
            </summary>
        </member>
        <member name="M:Cosmos.IdUtils.RandomIdProvider.Create(System.Int32,System.String)">
            <summary> 
            Create Random Id
            </summary>
            <param name="length">Length of random id you want to create</param>
            <param name="dict">Random Charter Dictionary, 0-9a-zA-Z as default.</param>
        </member>
        <member name="M:Cosmos.IdUtils.RandomIdProvider.Create(System.String,System.String)">
            <summary> 
            Create Random Id
            </summary>
            <param name="format">Format of random id you want to create</param>
            <param name="dict">Random Charter Dictionary, 0-9a-zA-Z as default.</param>
        </member>
        <member name="M:Cosmos.IdUtils.RandomId.#ctor(System.Int32,System.String)">
            <summary> 构造函数
            </summary>
            <param name="length">生成Id长度</param>
            <param name="dict">随机字符字典,默认字典为0-9a-zA-Z</param>
        </member>
        <member name="M:Cosmos.IdUtils.RandomId.#ctor(System.String,System.String)">
            <summary> 构造函数
            </summary>
            <param name="format">生成Id格式</param>
            <param name="dict">随机字符字典,默认字典为0-9a-zA-Z</param>
        </member>
        <member name="M:Cosmos.IdUtils.RandomId.Create">
            <summary> 生成Id
            </summary>
        </member>
        <member name="T:Cosmos.IdUtils.RandomNonceStrProvider">
            <summary>
            Random NonceStr Provider
            </summary>
        </member>
        <member name="M:Cosmos.IdUtils.RandomNonceStrProvider.Create">
            <summary>
            Create random noncestr
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.IdUtils.RandomNonceStrProvider.Create(System.Int32)">
            <summary>
            Create random noncestr
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.IdUtils.SnowflakeIdWorker">
            <summary>
            Snowflake Id worker
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.SnowflakeIdWorker.TWEPOCH">
            <summary>
            基准时间
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.SnowflakeIdWorker.WORKER_ID_BITS">
            <summary>
            机器标识位数
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.SnowflakeIdWorker.DATA_CENTER_ID_BITS">
            <summary>
            数据标志位数
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.SnowflakeIdWorker.SEQUENCE_BITS">
            <summary>
            序列号识位数
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.SnowflakeIdWorker.MAX_WORKER_ID">
            <summary>
            机器ID最大值
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.SnowflakeIdWorker.MAX_DATA_CENTER_ID">
            <summary>
            数据标志ID最大值
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.SnowflakeIdWorker.SEQUENCE_MASK">
            <summary>
            序列号ID最大值
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.SnowflakeIdWorker.WORKER_ID_SHIFT">
            <summary>
            机器ID偏左移12位
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.SnowflakeIdWorker.DATA_CENTER_ID_SHIFT">
            <summary>
            数据ID偏左移17位
            </summary>
        </member>
        <member name="F:Cosmos.IdUtils.SnowflakeIdWorker.TIMESTAMP_LEFT_SHIFT">
            <summary>
            时间毫秒左移22位
            </summary>
        </member>
        <member name="P:Cosmos.IdUtils.SnowflakeIdWorker.WorkerId">
            <summary>
            Worker Id
            </summary>
        </member>
        <member name="P:Cosmos.IdUtils.SnowflakeIdWorker.DataCenterId">
            <summary>
            Data center Id
            </summary>
        </member>
        <member name="P:Cosmos.IdUtils.SnowflakeIdWorker.Sequence">
            <summary>
            Sequence
            </summary>
        </member>
        <member name="M:Cosmos.IdUtils.SnowflakeIdWorker.#ctor(System.Int64,System.Int64,System.Int64)">
            <summary>
            Create a new <see cref="T:Cosmos.IdUtils.SnowflakeIdWorker"/> instance.
            </summary>
            <param name="workerId"></param>
            <param name="dataCenterId"></param>
            <param name="sequence"></param>
        </member>
        <member name="M:Cosmos.IdUtils.SnowflakeIdWorker.NextId">
            <summary>
            Next Id
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.IdUtils.SnowflakeIdWorker.TilNextMillis(System.Int64)">
            <summary>
            防止产生的时间比之前的时间还要小（由于NTP回拨等问题）,保持增量的趋势.
            </summary>
            <param name="lastTimestamp"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.IdUtils.SnowflakeIdWorker.TimeGen">
            <summary>
            获取当前的时间戳
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.IdUtils.SnowflakeProvider">
            <summary>
            Snowflake Provider
            </summary>
        </member>
        <member name="M:Cosmos.IdUtils.SnowflakeProvider.Create(System.Int64,System.Int64,System.Int64)">
            <summary>
            Create
            </summary>
            <param name="workerId"></param>
            <param name="dataCenterId"></param>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.IdUtils.SnowflakeProvider.Create``1(System.Int64,System.Int64,System.Int64)">
            <summary>
            Create
            </summary>
            <typeparam name="TSnowflakeIdWorker"></typeparam>
            <param name="workerId"></param>
            <param name="dataCenterId"></param>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.IdUtils.TraceIdAccessor">
            <summary>
            Trace Id Accessor
            </summary>
        </member>
        <member name="M:Cosmos.IdUtils.TraceIdAccessor.#ctor(Cosmos.IdUtils.ITraceIdMaker)">
            <summary>
            Create a new <see cref="T:Cosmos.IdUtils.TraceIdAccessor"/> instance.
            </summary>
            <param name="maker"></param>
        </member>
        <member name="M:Cosmos.IdUtils.TraceIdAccessor.GetTraceId">
            <summary>
            Get Trace Id
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.IdUtils.DefaultTraceIdMaker">
            <summary>
            Default TraceIdMaker
            </summary>
        </member>
        <member name="M:Cosmos.IdUtils.DefaultTraceIdMaker.CreateId">
            <summary>
            Create Id
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.IdUtils.ITraceIdMaker">
            <summary>
            Trace Maker Interface
            </summary>
        </member>
        <member name="M:Cosmos.IdUtils.ITraceIdMaker.CreateId">
            <summary>
            Create Id
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Joiners.CommonJoinUtils">
            <summary>
            Common join utils
            </summary>
        </member>
        <member name="M:Cosmos.Joiners.CommonJoinUtils.JoinToString``2(``1,System.Action{``1,System.String},System.Collections.Generic.IEnumerable{``0},System.String,System.Func{``0,System.Boolean},System.Func{``0,System.String},System.Func{``0,``0})">
            <summary>
            Join to string
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TContainer"></typeparam>
            <param name="container"></param>
            <param name="containerUpdateFunc"></param>
            <param name="list"></param>
            <param name="delimiter"></param>
            <param name="predicate"></param>
            <param name="to"></param>
            <param name="replaceFunc"></param>
        </member>
        <member name="T:Cosmos.Joiners.IJoiner">
            <summary>
            Joiner Interface<br />
            连接器接口
            </summary>
        </member>
        <member name="M:Cosmos.Joiners.IJoiner.SkipNulls">
            <summary>
            Skip null<br />
            跳过 null
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IJoiner.UseForNull(System.String)">
            <summary>
            If null, then use the special value.<br />
            如果为 null，则使用指定的值来替代
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IJoiner.UseForNull(System.Func{System.String,System.String})">
            <summary>
            If null, then use the special value.<br />
            如果为 null，则使用指定的值来替代
            </summary>
            <param name="valueFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IJoiner.WithKeyValueSeparator(System.String)">
            <summary>
            With KeyValue Separator
            </summary>
            <param name="separator"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IJoiner.WithKeyValueSeparator(System.Char)">
            <summary>
            With KeyValue Separator
            </summary>
            <param name="separator"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IJoiner.Join(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Join<br />
            连接
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IJoiner.Join(System.String,System.String[])">
            <summary>
            Join<br />
            连接
            </summary>
            <param name="str1"></param>
            <param name="restStrings"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IJoiner.Join``1(System.Collections.Generic.IEnumerable{``0},Cosmos.ITypeConverter{``0,System.String})">
            <summary>
            Join<br />
            连接
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IJoiner.Join``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String})">
            <summary>
            Join<br />
            连接
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IJoiner.Join``1(Cosmos.ITypeConverter{``0,System.String},``0,``0[])">
            <summary>
            Join<br />
            连接
            </summary>
            <typeparam name="T"></typeparam>
            <param name="converter"></param>
            <param name="item1"></param>
            <param name="restItems"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IJoiner.Join``1(System.Func{``0,System.String},``0,``0[])">
            <summary>
            Join<br />
            连接
            </summary>
            <typeparam name="T"></typeparam>
            <param name="to"></param>
            <param name="item1"></param>
            <param name="restItems"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IJoiner.AppendTo(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <param name="builder"></param>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IJoiner.AppendTo(System.Text.StringBuilder,System.String,System.String[])">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <param name="builder"></param>
            <param name="str1"></param>
            <param name="restStrings"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IJoiner.AppendTo``1(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{``0},Cosmos.ITypeConverter{``0,System.String})">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <typeparam name="T"></typeparam>
            <param name="builder"></param>
            <param name="list"></param>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IJoiner.AppendTo``1(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String})">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <typeparam name="T"></typeparam>
            <param name="builder"></param>
            <param name="list"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IJoiner.AppendTo``1(System.Text.StringBuilder,Cosmos.ITypeConverter{``0,System.String},``0,``0[])">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <typeparam name="T"></typeparam>
            <param name="builder"></param>
            <param name="converter"></param>
            <param name="item1"></param>
            <param name="restItems"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IJoiner.AppendTo``1(System.Text.StringBuilder,System.Func{``0,System.String},``0,``0[])">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <typeparam name="T"></typeparam>
            <param name="builder"></param>
            <param name="to"></param>
            <param name="item1"></param>
            <param name="restItems"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Joiners.IMapJoiner">
            <summary>
            MapJoiner Interface<br />
            MapJoiner 接口
            </summary>
        </member>
        <member name="M:Cosmos.Joiners.IMapJoiner.SkipNulls">
            <summary>
            Skip null<br />
            跳过 null
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IMapJoiner.SkipNulls(Cosmos.Joiners.SkipNullType)">
            <summary>
            Skip null<br />
            跳过 null
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IMapJoiner.UseForNull(System.String,System.String)">
            <summary>
            If null, then use the special value.<br />
            如果为 null，则使用指定的值来替代
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IMapJoiner.UseForNull(System.Func{System.String,System.String},System.Func{System.String,System.String})">
            <summary>
            If null, then use the special value.<br />
            如果为 null，则使用指定的值来替代
            </summary>
            <param name="keyFunc"></param>
            <param name="valueFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IMapJoiner.UseForNull``2(``0,``1)">
            <summary>
            If null, then use the special value.<br />
            如果为 null，则使用指定的值来替代
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IMapJoiner.UseForNull``2(System.Func{``0,``0},System.Func{``1,``1})">
            <summary>
            If null, then use the special value.<br />
            如果为 null，则使用指定的值来替代
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <param name="keyFunc"></param>
            <param name="valueFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IMapJoiner.FromTuple">
            <summary>
            Switch to tuple mode<br />
            切换为 Tuple 模式
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IMapJoiner.Join(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Join<br />
            连接
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IMapJoiner.Join(System.Collections.Generic.IEnumerable{System.String},System.String,System.String)">
            <summary>
            Join<br />
            连接
            </summary>
            <param name="list"></param>
            <param name="defaultKey"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IMapJoiner.Join(System.String,System.String,System.String[])">
            <summary>
            Join<br />
            连接
            </summary>
            <param name="str1"></param>
            <param name="str2"></param>
            <param name="restStrings"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IMapJoiner.Join``1(System.Collections.Generic.IEnumerable{``0},Cosmos.ITypeConverter{``0,System.String})">
            <summary>
            Join<br />
            连接
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IMapJoiner.Join``1(System.Collections.Generic.IEnumerable{``0},``0,``0,Cosmos.ITypeConverter{``0,System.String})">
            <summary>
            Join<br />
            连接
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="defaultKey"></param>
            <param name="defaultValue"></param>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IMapJoiner.Join``1(Cosmos.ITypeConverter{``0,System.String},``0,``0,``0[])">
            <summary>
            Join<br />
            连接
            </summary>
            <typeparam name="T"></typeparam>
            <param name="converter"></param>
            <param name="t1"></param>
            <param name="t2"></param>
            <param name="restTs"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IMapJoiner.AppendTo(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <param name="builder"></param>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IMapJoiner.AppendTo(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{System.String},System.String,System.String)">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <param name="builder"></param>
            <param name="list"></param>
            <param name="defaultKey"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IMapJoiner.AppendTo(System.Text.StringBuilder,System.String,System.String,System.String[])">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <param name="builder"></param>
            <param name="str1"></param>
            <param name="str2"></param>
            <param name="restStrings"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IMapJoiner.AppendTo``1(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{``0},Cosmos.ITypeConverter{``0,System.String})">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <typeparam name="T"></typeparam>
            <param name="builder"></param>
            <param name="list"></param>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IMapJoiner.AppendTo``1(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{``0},``0,``0,Cosmos.ITypeConverter{``0,System.String})">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <typeparam name="T"></typeparam>
            <param name="builder"></param>
            <param name="list"></param>
            <param name="defaultKey"></param>
            <param name="defaultValue"></param>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.IMapJoiner.AppendTo``1(System.Text.StringBuilder,Cosmos.ITypeConverter{``0,System.String},``0,``0,``0[])">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <typeparam name="T"></typeparam>
            <param name="builder"></param>
            <param name="converter"></param>
            <param name="t1"></param>
            <param name="t2"></param>
            <param name="restTs"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Joiners.ITupleJoiner">
            <summary>
            TupleJoiner Interface<br />
            TupleJoiner 接口
            </summary>
        </member>
        <member name="M:Cosmos.Joiners.ITupleJoiner.SkipNulls">
            <summary>
            Skip null<br />
            跳过 null
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.ITupleJoiner.SkipNulls(Cosmos.Joiners.SkipNullType)">
            <summary>
            Skip null<br />
            跳过 null
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.ITupleJoiner.UseForNull``2(System.Func{``0,``1,``0},System.Func{``0,``1,``1})">
            <summary>
            If null, then use the special value.<br />
            如果为 null，则使用指定的值来替代
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <param name="tupleKeyFunc"></param>
            <param name="tupleValueFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.ITupleJoiner.Join(System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})">
            <summary>
            Join<br />
            连接
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.ITupleJoiner.Join(System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.String,System.String)">
            <summary>
            Join<br />
            连接
            </summary>
            <param name="list"></param>
            <param name="defaultKey"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.ITupleJoiner.Join(System.ValueTuple{System.String,System.String},System.ValueTuple{System.String,System.String}[])">
            <summary>
            Join<br />
            连接
            </summary>
            <param name="tuple1"></param>
            <param name="restTuples"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.ITupleJoiner.Join``2(System.Collections.Generic.IEnumerable{System.ValueTuple{``0,``1}},System.Func{``0,System.String},System.Func{``1,System.String})">
            <summary>
            Join<br />
            连接
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <param name="list"></param>
            <param name="keyFunc"></param>
            <param name="valueFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.ITupleJoiner.Join``2(System.Collections.Generic.IEnumerable{System.ValueTuple{``0,``1}},``0,``1,System.Func{``0,System.String},System.Func{``1,System.String})">
            <summary>
            Join<br />
            连接
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <param name="list"></param>
            <param name="defaultKey"></param>
            <param name="defaultValue"></param>
            <param name="keyFunc"></param>
            <param name="valueFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.ITupleJoiner.Join``2(System.Func{``0,System.String},System.Func{``1,System.String},System.ValueTuple{``0,``1},System.ValueTuple{``0,``1}[])">
            <summary>
            Join<br />
            连接
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <param name="keyFunc"></param>
            <param name="valueFunc"></param>
            <param name="tuple1"></param>
            <param name="restTuples"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.ITupleJoiner.AppendTo(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <param name="builder"></param>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.ITupleJoiner.AppendTo(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.String,System.String)">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <param name="builder"></param>
            <param name="list"></param>
            <param name="defaultKey"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.ITupleJoiner.AppendTo(System.Text.StringBuilder,System.ValueTuple{System.String,System.String},System.ValueTuple{System.String,System.String}[])">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <param name="builder"></param>
            <param name="tuple1"></param>
            <param name="restTuples"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.ITupleJoiner.AppendTo``2(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{System.ValueTuple{``0,``1}},System.Func{``0,System.String},System.Func{``1,System.String})">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <param name="builder"></param>
            <param name="list"></param>
            <param name="keyFunc"></param>
            <param name="valueFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.ITupleJoiner.AppendTo``2(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{System.ValueTuple{``0,``1}},``0,``1,System.Func{``0,System.String},System.Func{``1,System.String})">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <param name="builder"></param>
            <param name="list"></param>
            <param name="defaultKey"></param>
            <param name="defaultValue"></param>
            <param name="keyFunc"></param>
            <param name="valueFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.ITupleJoiner.AppendTo``2(System.Text.StringBuilder,System.Func{``0,System.String},System.Func{``1,System.String},System.ValueTuple{``0,``1},System.ValueTuple{``0,``1}[])">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <param name="builder"></param>
            <param name="keyFunc"></param>
            <param name="valueFunc"></param>
            <param name="tuple1"></param>
            <param name="restTuples"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Joiners.Joiner">
            <summary>
            Joiner<br />
            连接器
            </summary>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IJoiner#SkipNulls">
            <summary>
            Skip null<br />
            跳过 null
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IJoiner#UseForNull(System.String)">
            <summary>
            If null, then use the special value.<br />
            如果为 null，则使用指定的值来替代
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IJoiner#UseForNull(System.Func{System.String,System.String})">
            <summary>
            If null, then use the special value.<br />
            如果为 null，则使用指定的值来替代
            </summary>
            <param name="valueFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.WithKeyValueSeparator(System.String)">
            <summary>
            With KeyValue Separator
            </summary>
            <param name="separator"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.WithKeyValueSeparator(System.Char)">
            <summary>
            With KeyValue Separator
            </summary>
            <param name="separator"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IJoiner#Join(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Join<br />
            连接
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IJoiner#Join``1(System.Collections.Generic.IEnumerable{``0},Cosmos.ITypeConverter{``0,System.String})">
            <summary>
            Join<br />
            连接
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IJoiner#Join``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String})">
            <summary>
            Join<br />
            连接
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IJoiner#Join(System.String,System.String[])">
            <summary>
            Join<br />
            连接
            </summary>
            <param name="str1"></param>
            <param name="restStrings"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IJoiner#Join``1(Cosmos.ITypeConverter{``0,System.String},``0,``0[])">
            <summary>
            Join<br />
            连接
            </summary>
            <typeparam name="T"></typeparam>
            <param name="converter"></param>
            <param name="item1"></param>
            <param name="restItems"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IJoiner#Join``1(System.Func{``0,System.String},``0,``0[])">
            <summary>
            Join<br />
            连接
            </summary>
            <typeparam name="T"></typeparam>
            <param name="to"></param>
            <param name="item1"></param>
            <param name="restItems"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IJoiner#AppendTo(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <param name="builder"></param>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IJoiner#AppendTo(System.Text.StringBuilder,System.String,System.String[])">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <param name="builder"></param>
            <param name="str1"></param>
            <param name="restStrings"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IJoiner#AppendTo``1(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{``0},Cosmos.ITypeConverter{``0,System.String})">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <typeparam name="T"></typeparam>
            <param name="builder"></param>
            <param name="list"></param>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IJoiner#AppendTo``1(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String})">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <typeparam name="T"></typeparam>
            <param name="builder"></param>
            <param name="list"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IJoiner#AppendTo``1(System.Text.StringBuilder,Cosmos.ITypeConverter{``0,System.String},``0,``0[])">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <typeparam name="T"></typeparam>
            <param name="builder"></param>
            <param name="converter"></param>
            <param name="item1"></param>
            <param name="restItems"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IJoiner#AppendTo``1(System.Text.StringBuilder,System.Func{``0,System.String},``0,``0[])">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <typeparam name="T"></typeparam>
            <param name="builder"></param>
            <param name="to"></param>
            <param name="item1"></param>
            <param name="restItems"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.On(System.String)">
            <summary>
            On, create a new <see cref="T:Cosmos.Joiners.Joiner"/> instance.<br />
            On 操作，创建一个新 <see cref="T:Cosmos.Joiners.Joiner"/> 实例。
            </summary>
            <param name="on"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.On(System.Char)">
            <summary>
            On, create a new <see cref="T:Cosmos.Joiners.Joiner"/> instance.<br />
            On 操作，创建一个新 <see cref="T:Cosmos.Joiners.Joiner"/> 实例。
            </summary>
            <param name="on"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IMapJoiner#SkipNulls">
            <summary>
            Skip null<br />
            跳过 null
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IMapJoiner#SkipNulls(Cosmos.Joiners.SkipNullType)">
            <summary>
            Skip null<br />
            跳过 null
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IMapJoiner#UseForNull(System.String,System.String)">
            <summary>
            If null, then use the special value.<br />
            如果为 null，则使用指定的值来替代
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IMapJoiner#UseForNull(System.Func{System.String,System.String},System.Func{System.String,System.String})">
            <summary>
            If null, then use the special value.<br />
            如果为 null，则使用指定的值来替代
            </summary>
            <param name="keyFunc"></param>
            <param name="valueFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IMapJoiner#UseForNull``2(``0,``1)">
            <summary>
            If null, then use the special value.<br />
            如果为 null，则使用指定的值来替代
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IMapJoiner#UseForNull``2(System.Func{``0,``0},System.Func{``1,``1})">
            <summary>
            If null, then use the special value.<br />
            如果为 null，则使用指定的值来替代
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <param name="keyFunc"></param>
            <param name="valueFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IMapJoiner#FromTuple">
            <summary>
            Switch to tuple mode<br />
            切换为 Tuple 模式
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IMapJoiner#Join(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Join<br />
            连接
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IMapJoiner#Join(System.Collections.Generic.IEnumerable{System.String},System.String,System.String)">
            <summary>
            Join<br />
            连接
            </summary>
            <param name="list"></param>
            <param name="defaultKey"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IMapJoiner#Join``1(System.Collections.Generic.IEnumerable{``0},Cosmos.ITypeConverter{``0,System.String})">
            <summary>
            Join<br />
            连接
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IMapJoiner#Join``1(System.Collections.Generic.IEnumerable{``0},``0,``0,Cosmos.ITypeConverter{``0,System.String})">
            <summary>
            Join<br />
            连接
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="defaultKey"></param>
            <param name="defaultValue"></param>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IMapJoiner#Join(System.String,System.String,System.String[])">
            <summary>
            Join<br />
            连接
            </summary>
            <param name="str1"></param>
            <param name="str2"></param>
            <param name="restStrings"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IMapJoiner#Join``1(Cosmos.ITypeConverter{``0,System.String},``0,``0,``0[])">
            <summary>
            Join<br />
            连接
            </summary>
            <typeparam name="T"></typeparam>
            <param name="converter"></param>
            <param name="t1"></param>
            <param name="t2"></param>
            <param name="restTs"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IMapJoiner#AppendTo(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <param name="builder"></param>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IMapJoiner#AppendTo(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{System.String},System.String,System.String)">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <param name="builder"></param>
            <param name="list"></param>
            <param name="defaultKey"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IMapJoiner#AppendTo(System.Text.StringBuilder,System.String,System.String,System.String[])">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <param name="builder"></param>
            <param name="str1"></param>
            <param name="str2"></param>
            <param name="restStrings"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IMapJoiner#AppendTo``1(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{``0},Cosmos.ITypeConverter{``0,System.String})">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <typeparam name="T"></typeparam>
            <param name="builder"></param>
            <param name="list"></param>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IMapJoiner#AppendTo``1(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{``0},``0,``0,Cosmos.ITypeConverter{``0,System.String})">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <typeparam name="T"></typeparam>
            <param name="builder"></param>
            <param name="list"></param>
            <param name="defaultKey"></param>
            <param name="defaultValue"></param>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#IMapJoiner#AppendTo``1(System.Text.StringBuilder,Cosmos.ITypeConverter{``0,System.String},``0,``0,``0[])">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <typeparam name="T"></typeparam>
            <param name="builder"></param>
            <param name="converter"></param>
            <param name="t1"></param>
            <param name="t2"></param>
            <param name="restTs"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#ITupleJoiner#SkipNulls">
            <summary>
            Skip null<br />
            跳过 null
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#ITupleJoiner#SkipNulls(Cosmos.Joiners.SkipNullType)">
            <summary>
            Skip null<br />
            跳过 null
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#ITupleJoiner#UseForNull``2(System.Func{``0,``1,``0},System.Func{``0,``1,``1})">
            <summary>
            If null, then use the special value.<br />
            如果为 null，则使用指定的值来替代
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <param name="tupleKeyFunc"></param>
            <param name="tupleValueFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#ITupleJoiner#Join(System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})">
            <summary>
            Join<br />
            连接
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#ITupleJoiner#Join(System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.String,System.String)">
            <summary>
            Join<br />
            连接
            </summary>
            <param name="list"></param>
            <param name="defaultKey"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#ITupleJoiner#Join``2(System.Collections.Generic.IEnumerable{System.ValueTuple{``0,``1}},System.Func{``0,System.String},System.Func{``1,System.String})">
            <summary>
            Join<br />
            连接
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <param name="list"></param>
            <param name="keyFunc"></param>
            <param name="valueFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#ITupleJoiner#Join``2(System.Collections.Generic.IEnumerable{System.ValueTuple{``0,``1}},``0,``1,System.Func{``0,System.String},System.Func{``1,System.String})">
            <summary>
            Join<br />
            连接
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <param name="list"></param>
            <param name="defaultKey"></param>
            <param name="defaultValue"></param>
            <param name="keyFunc"></param>
            <param name="valueFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#ITupleJoiner#Join(System.ValueTuple{System.String,System.String},System.ValueTuple{System.String,System.String}[])">
            <summary>
            Join<br />
            连接
            </summary>
            <param name="tuple1"></param>
            <param name="restTuples"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#ITupleJoiner#Join``2(System.Func{``0,System.String},System.Func{``1,System.String},System.ValueTuple{``0,``1},System.ValueTuple{``0,``1}[])">
            <summary>
            Join<br />
            连接
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <param name="keyFunc"></param>
            <param name="valueFunc"></param>
            <param name="tuple1"></param>
            <param name="restTuples"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#ITupleJoiner#AppendTo(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <param name="builder"></param>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#ITupleJoiner#AppendTo(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.String,System.String)">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <param name="builder"></param>
            <param name="list"></param>
            <param name="defaultKey"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#ITupleJoiner#AppendTo(System.Text.StringBuilder,System.ValueTuple{System.String,System.String},System.ValueTuple{System.String,System.String}[])">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <param name="builder"></param>
            <param name="tuple1"></param>
            <param name="restTuples"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#ITupleJoiner#AppendTo``2(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{System.ValueTuple{``0,``1}},System.Func{``0,System.String},System.Func{``1,System.String})">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <param name="builder"></param>
            <param name="list"></param>
            <param name="keyFunc"></param>
            <param name="valueFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#ITupleJoiner#AppendTo``2(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{System.ValueTuple{``0,``1}},``0,``1,System.Func{``0,System.String},System.Func{``1,System.String})">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <param name="builder"></param>
            <param name="list"></param>
            <param name="defaultKey"></param>
            <param name="defaultValue"></param>
            <param name="keyFunc"></param>
            <param name="valueFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Joiners.Joiner.Cosmos#Joiners#ITupleJoiner#AppendTo``2(System.Text.StringBuilder,System.Func{``0,System.String},System.Func{``1,System.String},System.ValueTuple{``0,``1},System.ValueTuple{``0,``1}[])">
            <summary>
            Append to...<br />
            附加到...
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <param name="builder"></param>
            <param name="keyFunc"></param>
            <param name="valueFunc"></param>
            <param name="tuple1"></param>
            <param name="restTuples"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Joiners.SkipNullType">
            <summary>
            Skip null types<br />
            跳过 null 的类型
            </summary>
        </member>
        <member name="F:Cosmos.Joiners.SkipNullType.Nothing">
            <summary>
            Nothing
            </summary>
        </member>
        <member name="F:Cosmos.Joiners.SkipNullType.WhenBoth">
            <summary>
            When both
            </summary>
        </member>
        <member name="F:Cosmos.Joiners.SkipNullType.WhenEither">
            <summary>
            When either
            </summary>
        </member>
        <member name="F:Cosmos.Joiners.SkipNullType.WhenKeyIsNull">
            <summary>
            When key is null
            </summary>
        </member>
        <member name="F:Cosmos.Joiners.SkipNullType.WhenValueIsNull">
            <summary>
            When value is null
            </summary>
        </member>
        <member name="T:Cosmos.Splitters.IFixedLengthSplitter">
            <summary>
            Fixed length splitter interface
            </summary>
        </member>
        <member name="M:Cosmos.Splitters.IFixedLengthSplitter.TrimResults">
            <summary>
            Trim results
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.IFixedLengthSplitter.TrimResults(System.Func{System.String,System.String})">
            <summary>
            Trim results
            </summary>
            <param name="trimFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.IFixedLengthSplitter.Limit(System.Int32)">
            <summary>
            Limit
            </summary>
            <param name="limit"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.IFixedLengthSplitter.WithKeyValueSeparator(System.Char)">
            <summary>
            With KeyValue separator
            </summary>
            <param name="separator"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.IFixedLengthSplitter.WithKeyValueSeparator(System.String)">
            <summary>
            With KeyValue separator
            </summary>
            <param name="separator"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.IFixedLengthSplitter.Split(System.String)">
            <summary>
            Split
            </summary>
            <param name="originalString"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.IFixedLengthSplitter.Split``1(System.String,Cosmos.Serialization.IObjectSerializer)">
            <summary>
            Split
            </summary>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.IFixedLengthSplitter.Split``1(System.String,Cosmos.ITypeConverter{System.String,``0})">
            <summary>
            Split
            </summary>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.IFixedLengthSplitter.Split``2(System.String,Cosmos.Serialization.IObjectSerializer,Cosmos.IGenericObjectMapper)">
            <summary>
            Split
            </summary>
            <typeparam name="TMiddle"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="serializer"></param>
            <param name="mapper"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.IFixedLengthSplitter.SplitToList(System.String)">
            <summary>
            Split to list
            </summary>
            <param name="originalString"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.IFixedLengthSplitter.SplitToList``1(System.String,Cosmos.Serialization.IObjectSerializer)">
            <summary>
            Split to list
            </summary>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.IFixedLengthSplitter.SplitToList``1(System.String,Cosmos.ITypeConverter{System.String,``0})">
            <summary>
            Split to list
            </summary>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.IFixedLengthSplitter.SplitToList``2(System.String,Cosmos.Serialization.IObjectSerializer,Cosmos.IGenericObjectMapper)">
            <summary>
            Split to list
            </summary>
            <typeparam name="TMiddle"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="serializer"></param>
            <param name="mapper"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Splitters.IMapSplitter">
            <summary>
            MapSplitter interface
            </summary>
        </member>
        <member name="M:Cosmos.Splitters.IMapSplitter.TrimResults">
            <summary>
            Trim results
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.IMapSplitter.TrimResults(System.Func{System.String,System.String},System.Func{System.String,System.String})">
            <summary>
            Trim results
            </summary>
            <param name="keyTrimFunc"></param>
            <param name="valueTrimFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.IMapSplitter.Limit(System.Int32)">
            <summary>
            Limit
            </summary>
            <param name="limit"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.IMapSplitter.Split(System.String)">
            <summary>
            Split
            </summary>
            <param name="originalString"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.IMapSplitter.Split``1(System.String,Cosmos.Serialization.IObjectSerializer)">
            <summary>
            Split
            </summary>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.IMapSplitter.Split``1(System.String,Cosmos.ITypeConverter{System.String,``0})">
            <summary>
            Split
            </summary>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.IMapSplitter.Split``2(System.String,Cosmos.Serialization.IObjectSerializer,Cosmos.IGenericObjectMapper)">
            <summary>
            Split
            </summary>
            <typeparam name="TMiddle"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="serializer"></param>
            <param name="mapper"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.IMapSplitter.SplitToDictionary(System.String)">
            <summary>
            Split to dictionary
            </summary>
            <param name="originalString"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.IMapSplitter.SplitToDictionary``1(System.String,Cosmos.Serialization.IObjectSerializer)">
            <summary>
            Split to dictionary
            </summary>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.IMapSplitter.SplitToDictionary``1(System.String,Cosmos.ITypeConverter{System.String,``0})">
            <summary>
            Split to dictionary
            </summary>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.IMapSplitter.SplitToDictionary``2(System.String,Cosmos.Serialization.IObjectSerializer,Cosmos.IGenericObjectMapper)">
            <summary>
            Split to dictionary
            </summary>
            <typeparam name="TMiddle"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="serializer"></param>
            <param name="mapper"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Splitters.ISplitter">
            <summary>
            Splitter interface
            </summary>
        </member>
        <member name="M:Cosmos.Splitters.ISplitter.OmitEmptyStrings">
            <summary>
            Omit empty strings
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.ISplitter.TrimResults">
            <summary>
            Trim results
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.ISplitter.TrimResults(System.Func{System.String,System.String})">
            <summary>
            Trim results
            </summary>
            <param name="trimFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.ISplitter.Limit(System.Int32)">
            <summary>
            Limit
            </summary>
            <param name="limit"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.ISplitter.WithKeyValueSeparator(System.Char)">
            <summary>
            With KeyValue separator
            </summary>
            <param name="separator"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.ISplitter.WithKeyValueSeparator(System.String)">
            <summary>
            With KeyValue separator
            </summary>
            <param name="separator"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.ISplitter.Split(System.String)">
            <summary>
            Split
            </summary>
            <param name="originalString"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.ISplitter.Split``1(System.String,Cosmos.Serialization.IObjectSerializer)">
            <summary>
            Split
            </summary>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.ISplitter.Split``1(System.String,Cosmos.ITypeConverter{System.String,``0})">
            <summary>
            Split
            </summary>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.ISplitter.Split``2(System.String,Cosmos.Serialization.IObjectSerializer,Cosmos.IGenericObjectMapper)">
            <summary>
            Split
            </summary>
            <typeparam name="TMiddle"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="serializer"></param>
            <param name="mapper"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.ISplitter.SplitToList(System.String)">
            <summary>
            Split to list
            </summary>
            <param name="originalString"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.ISplitter.SplitToList``1(System.String,Cosmos.Serialization.IObjectSerializer)">
            <summary>
            Split to list
            </summary>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.ISplitter.SplitToList``1(System.String,Cosmos.ITypeConverter{System.String,``0})">
            <summary>
            Split to list
            </summary>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.ISplitter.SplitToList``2(System.String,Cosmos.Serialization.IObjectSerializer,Cosmos.IGenericObjectMapper)">
            <summary>
            Split to list
            </summary>
            <typeparam name="TMiddle"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="serializer"></param>
            <param name="mapper"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Splitters.Splitter">
            <summary>
            Splitter<br />
            字符串分割器
            </summary>
            <summary>
            Splitter<br />
            字符串分割器
            </summary>
            <summary>
            Splitter<br />
            字符串分割器
            </summary>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.OmitEmptyStrings">
            <summary>
            Omit empty string<br />
            移除空字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.Cosmos#Splitters#ISplitter#WithKeyValueSeparator(System.String)">
            <summary>
            With KeyValue separator<br />
            设置键值对分隔符
            </summary>
            <param name="separator"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.Cosmos#Splitters#ISplitter#WithKeyValueSeparator(System.Char)">
            <summary>
            With KeyValue separator<br />
            设置键值对分隔符
            </summary>
            <param name="separator"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.Cosmos#Splitters#ISplitter#TrimResults">
            <summary>
            Trim results<br />
            修整结果两端
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.Cosmos#Splitters#ISplitter#TrimResults(System.Func{System.String,System.String})">
            <summary>
            Trim results<br />
            修整结果，按照指定的方法
            </summary>
            <param name="trimFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.Cosmos#Splitters#ISplitter#Limit(System.Int32)">
            <summary>
            Limit<br />
            设置限制的值
            </summary>
            <param name="limit"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.Cosmos#Splitters#ISplitter#Split(System.String)">
            <summary>
            Split<br />
            分割
            </summary>
            <param name="originalString"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.Cosmos#Splitters#ISplitter#Split``1(System.String,Cosmos.Serialization.IObjectSerializer)">
            <summary>
            Split<br />
            分割
            </summary>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.Cosmos#Splitters#ISplitter#Split``1(System.String,Cosmos.ITypeConverter{System.String,``0})">
            <summary>
            Split<br />
            分割
            </summary>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.Cosmos#Splitters#ISplitter#Split``2(System.String,Cosmos.Serialization.IObjectSerializer,Cosmos.IGenericObjectMapper)">
            <summary>
            Split<br />
            分割
            </summary>
            <typeparam name="TMiddle"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="serializer"></param>
            <param name="mapper"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.Cosmos#Splitters#ISplitter#SplitToList(System.String)">
            <summary>
            Split to list<br />
            分割为列表
            </summary>
            <param name="originalString"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.Cosmos#Splitters#ISplitter#SplitToList``1(System.String,Cosmos.Serialization.IObjectSerializer)">
            <summary>
            Split to list<br />
            分割为列表
            </summary>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.Cosmos#Splitters#ISplitter#SplitToList``1(System.String,Cosmos.ITypeConverter{System.String,``0})">
            <summary>
            Split to list<br />
            分割为列表
            </summary>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.Cosmos#Splitters#ISplitter#SplitToList``2(System.String,Cosmos.Serialization.IObjectSerializer,Cosmos.IGenericObjectMapper)">
            <summary>
            Split to list<br />
            分割为列表
            </summary>
            <typeparam name="TMiddle"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="serializer"></param>
            <param name="mapper"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.On(System.String,System.String[])">
            <summary>
            On, to create a new Splitter instance.<br />
            On 操作，创建一个新的 Splitter 实例。
            </summary>
            <param name="on"></param>
            <param name="on2"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.On(System.Text.RegularExpressions.Regex)">
            <summary>
            On, to create a new Splitter instance.<br />
            On 操作，创建一个新的 Splitter 实例。
            </summary>
            <param name="pattern"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.OnPattern(System.String)">
            <summary>
            On, to create a new Splitter instance.<br />
            On 操作，创建一个新的 Splitter 实例。
            </summary>
            <param name="separatorPattern"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.FixedLength(System.Int32)">
            <summary>
            Fixed length<br />
            固定长度
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.Cosmos#Splitters#IFixedLengthSplitter#TrimResults">
            <summary>
            Trim results<br />
            修整结果两端
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.Cosmos#Splitters#IFixedLengthSplitter#TrimResults(System.Func{System.String,System.String})">
            <summary>
            Trim results<br />
            修整结果，按照指定的方法
            </summary>
            <param name="trimFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.Cosmos#Splitters#IFixedLengthSplitter#Limit(System.Int32)">
            <summary>
            Limit<br />
            设置限制的值
            </summary>
            <param name="limit"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.Cosmos#Splitters#IFixedLengthSplitter#WithKeyValueSeparator(System.String)">
            <summary>
            With KeyValue separator<br />
            设置键值对分隔符
            </summary>
            <param name="separator"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.Cosmos#Splitters#IFixedLengthSplitter#WithKeyValueSeparator(System.Char)">
            <summary>
            With KeyValue separator<br />
            设置键值对分隔符
            </summary>
            <param name="separator"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.Cosmos#Splitters#IFixedLengthSplitter#Split(System.String)">
            <summary>
            Split<br />
            分割
            </summary>
            <param name="originalString"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.Cosmos#Splitters#IFixedLengthSplitter#Split``1(System.String,Cosmos.Serialization.IObjectSerializer)">
            <summary>
            Split<br />
            分割
            </summary>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.Cosmos#Splitters#IFixedLengthSplitter#Split``1(System.String,Cosmos.ITypeConverter{System.String,``0})">
            <summary>
            Split<br />
            分割
            </summary>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.Cosmos#Splitters#IFixedLengthSplitter#Split``2(System.String,Cosmos.Serialization.IObjectSerializer,Cosmos.IGenericObjectMapper)">
            <summary>
            Split<br />
            分割
            </summary>
            <typeparam name="TMiddle"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="serializer"></param>
            <param name="mapper"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.Cosmos#Splitters#IFixedLengthSplitter#SplitToList(System.String)">
            <summary>
            Split<br />
            分割
            </summary>
            <param name="originalString"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.Cosmos#Splitters#IFixedLengthSplitter#SplitToList``1(System.String,Cosmos.Serialization.IObjectSerializer)">
            <summary>
            Split to list<br />
            分割为列表
            </summary>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.Cosmos#Splitters#IFixedLengthSplitter#SplitToList``1(System.String,Cosmos.ITypeConverter{System.String,``0})">
            <summary>
            Split to list<br />
            分割为列表
            </summary>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.Cosmos#Splitters#IFixedLengthSplitter#SplitToList``2(System.String,Cosmos.Serialization.IObjectSerializer,Cosmos.IGenericObjectMapper)">
            <summary>
            Split to list<br />
            分割为列表
            </summary>
            <typeparam name="TMiddle"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="serializer"></param>
            <param name="mapper"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.Cosmos#Splitters#IMapSplitter#TrimResults">
            <summary>
            Trim results<br />
            修整结果两端
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.Cosmos#Splitters#IMapSplitter#TrimResults(System.Func{System.String,System.String},System.Func{System.String,System.String})">
            <summary>
            Trim results<br />
            修整结果，按照指定的方法
            </summary>
            <param name="keyTrimFunc"></param>
            <param name="valueTrimFunc"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.Cosmos#Splitters#IMapSplitter#Limit(System.Int32)">
            <summary>
            Limit<br />
            设置限制的值
            </summary>
            <param name="limit"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.Cosmos#Splitters#IMapSplitter#Split``1(System.String,Cosmos.Serialization.IObjectSerializer)">
            <summary>
            Split<br />
            分割
            </summary>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.Cosmos#Splitters#IMapSplitter#Split``1(System.String,Cosmos.ITypeConverter{System.String,``0})">
            <summary>
            Split<br />
            分割
            </summary>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.Cosmos#Splitters#IMapSplitter#Split(System.String)">
            <summary>
            Split<br />
            分割
            </summary>
            <param name="originalString"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.Cosmos#Splitters#IMapSplitter#Split``2(System.String,Cosmos.Serialization.IObjectSerializer,Cosmos.IGenericObjectMapper)">
            <summary>
            Split<br />
            分割
            </summary>
            <typeparam name="TMiddle"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="serializer"></param>
            <param name="mapper"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.SplitToDictionary(System.String)">
            <summary>
            Split to dictionary<br />
            分割为字典
            </summary>
            <param name="originalString"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.SplitToDictionary``1(System.String,Cosmos.Serialization.IObjectSerializer)">
            <summary>
            Split to dictionary<br />
            分割为字典
            </summary>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.SplitToDictionary``1(System.String,Cosmos.ITypeConverter{System.String,``0})">
            <summary>
            Split to dictionary<br />
            分割为字典
            </summary>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Splitters.Splitter.SplitToDictionary``2(System.String,Cosmos.Serialization.IObjectSerializer,Cosmos.IGenericObjectMapper)">
            <summary>
            Split to dictionary<br />
            分割为字典
            </summary>
            <typeparam name="TMiddle"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="originalString"></param>
            <param name="serializer"></param>
            <param name="mapper"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Text.CaseFormat">
            <summary>
            Case format<br />
            大小写格式化器
            </summary>
        </member>
        <member name="M:Cosmos.Text.CaseFormat.To(Cosmos.Text.CaseFormat.Style,System.String)">
            <summary>
            To<br />
            转换
            </summary>
            <param name="style"></param>
            <param name="sequence"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.CaseFormat.To(Humanizer.IStringTransformer,System.String,System.String)">
            <summary>
            To<br />
            转换
            </summary>
            <param name="transformer"></param>
            <param name="sequence"></param>
            <param name="joinOnStr"></param>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Text.CaseFormat.LowerHyphen">
            <summary>
            Create a <see cref="T:Cosmos.Text.CaseFormat"/> instance with a hyphen splitter.
            </summary>
        </member>
        <member name="P:Cosmos.Text.CaseFormat.LowerUnderscore">
            <summary>
            Create a <see cref="T:Cosmos.Text.CaseFormat"/> instance with a lower underscore splitter.
            </summary>
        </member>
        <member name="P:Cosmos.Text.CaseFormat.UpperUnderscore">
            <summary>
            Create a <see cref="T:Cosmos.Text.CaseFormat"/> instance with a upper underscore splitter.
            </summary>
        </member>
        <member name="P:Cosmos.Text.CaseFormat.Instance">
            <summary>
            Create a <see cref="T:Cosmos.Text.CaseFormat"/> instance with a normal splitter.
            </summary>
        </member>
        <member name="P:Cosmos.Text.CaseFormat.Humanizer">
            <summary>
            Create a <see cref="T:Cosmos.Text.CaseFormat"/> instance in humanizer mode.
            </summary>
        </member>
        <member name="T:Cosmos.Text.CaseFormat.Style">
            <summary>
            Case format style<be />
            大小写格式化样式
            </summary>
        </member>
        <member name="F:Cosmos.Text.CaseFormat.Style.LOWER_CAMEL">
            <summary>
            Lower camel<br />
            小写与驼峰
            </summary>
        </member>
        <member name="F:Cosmos.Text.CaseFormat.Style.LOWER_HYPHEN">
            <summary>
            Lower hyphen<br />
            小写与横线
            </summary>
        </member>
        <member name="F:Cosmos.Text.CaseFormat.Style.LOWER_UNDERSCORE">
            <summary>
            Lower underscore<br />
            小写与下划线
            </summary>
        </member>
        <member name="F:Cosmos.Text.CaseFormat.Style.UPPER_CAMEL">
            <summary>
            Upper camel<br />
            大写与驼峰
            </summary>
        </member>
        <member name="F:Cosmos.Text.CaseFormat.Style.UPPER_UNDERSCORE">
            <summary>
            Upper underscore<br />
            大写与下划线
            </summary>
        </member>
        <member name="T:Cosmos.Text.StringExtensions">
            <summary>
            String extensions
            </summary>
        </member>
        <member name="M:Cosmos.Text.StringExtensions.IsSameWords(System.String,System.String)">
            <summary>
            Is same words
            </summary>
            <param name="text"></param>
            <param name="check"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.StringExtensions.ContainsChinese(System.String)">
            <summary>
            是否包含中文
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Cosmos.Text.StringExtensions.ContainsNumber(System.String)">
            <summary>
            是否包含数字
            </summary>
            <param name="text">文本</param>
        </member>
        <member name="M:Cosmos.Text.StringExtensions.ContainsIgnoreCase(System.String,System.String)">
            <summary>
            Contains ignore case
            </summary>
            <param name="text"></param>
            <param name="toCheck"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.StringExtensions.ContainsWholeWord(System.String,System.String)">
            <summary>
            Contains whole word
            </summary>
            <param name="text"></param>
            <param name="toCheck"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.StringExtensions.ContainsAnyWholeWord(System.String,System.String[])">
            <summary>
            Contains ant whole word
            </summary>
            <param name="text"></param>
            <param name="toCheck"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.StringExtensions.ContainsWholePhrase(System.String,System.String)">
            <summary>
            Contains whole phrase
            </summary>
            <param name="text"></param>
            <param name="toCheck"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.StringExtensions.ContainsWholePhraseAny(System.String,System.String[])">
            <summary>
            Contains whole phrase any
            </summary>
            <param name="text"></param>
            <param name="toCheck"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.StringExtensions.ContainsWholePhraseAll(System.String,System.String[])">
            <summary>
            Contains whole phrase all
            </summary>
            <param name="text"></param>
            <param name="toCheck"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.StringExtensions.ContainsAnyIgnoreCase(System.String,System.String[])">
            <summary>
            Contains any ignore case
            </summary>
            <param name="text"></param>
            <param name="toCheck"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.StringExtensions.ContainsAllIgnoreCase(System.String,System.String[])">
            <summary>
            Contains all ignore case
            </summary>
            <param name="text"></param>
            <param name="toCheck"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.StringExtensions.ContainsOnlyThisChar(System.String,System.Char)">
            <summary>
            Contains onle this char
            </summary>
            <param name="text"></param>
            <param name="toCheck"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.StringExtensions.UseAsSeparatorFor``1(System.String,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Use As Separator For
            </summary>
            <typeparam name="T"></typeparam>
            <param name="separator"></param>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.StringExtensions.FindFirstPhrase(System.String,System.String[])">
            <summary>
            Find first phrase
            </summary>
            <param name="text"></param>
            <param name="phrasesToCheck"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.StringExtensions.FindFirstOccurrence(System.String,System.String[])">
            <summary>
            Find first occurrence
            </summary>
            <param name="text"></param>
            <param name="toCheck"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.StringExtensions.FindAndReplaceFirstOccurrence(System.String,System.String,System.String[])">
            <summary>
            Find and replace first occurrence
            </summary>
            <param name="text"></param>
            <param name="newValue"></param>
            <param name="oldValues"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.StringExtensions.FindAndInsertBeforeFirstOccurrence(System.String,System.String,System.String[])">
            <summary>
            Find and insert before first occurrence
            </summary>
            <param name="text"></param>
            <param name="textInsert"></param>
            <param name="oldValues"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.StringExtensions.Split(System.String,System.String)">
            <summary>
            根据给定的 splitCode 对字符串进行切割
            </summary>
            <param name="string"></param>
            <param name="separator">分隔符</param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.StringExtensions.SplitInWords(System.String)">
            <summary>
            Split in words
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.StringExtensions.SplitInWordsLongerThan(System.String,System.Int32)">
            <summary>
            Split in words longer than...
            </summary>
            <param name="s"></param>
            <param name="wordLen"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.StringExtensions.SplitInLines(System.String)">
            <summary>
            Split in lines
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.StringExtensions.SplitInLinesTyped``1(System.String)">
            <summary>
            Split in lines
            </summary>
            <typeparam name="T"></typeparam>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.StringExtensions.SplitInLinesRemoveEmptys(System.String)">
            <summary>
            Split in lines and remove empty
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.StringExtensions.SplitByIndex(System.String,System.Int32)">
            <summary>
            Split by index
            </summary>
            <param name="text"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.StringExtensions.SplitWordsByIndex(System.String,System.Int32)">
            <summary>
            Split words by index
            </summary>
            <param name="text"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.StringExtensions.SplitTyped``1(System.String,System.Char)">
            <summary>
            Split
            </summary>
            <typeparam name="T"></typeparam>
            <param name="me"></param>
            <param name="delimiter"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.StringExtensions.SplitTyped``1(System.String,System.String)">
            <summary>
            Split
            </summary>
            <typeparam name="T"></typeparam>
            <param name="me"></param>
            <param name="delimiter"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.StringExtensions.TotalWords(System.String)">
            <summary>
            Total words
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.StringExtensions.LastWord(System.String)">
            <summary>
            Last word
            </summary>
            <param name="me"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.StringExtensions.SecondWord(System.String)">
            <summary>
            Second word
            </summary>
            <param name="me"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.StringExtensions.FirstWord(System.String)">
            <summary>
            First word
            </summary>
            <param name="me"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Text.RegexUtils.RegexCache">
            <summary>
            Regex cache
            </summary>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexCache.Get(System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Gets the already cached value for a key, or calculates the value and stores it.
            </summary>
            <param name="pattern">The pattern used to create the regular expression.</param>
            <param name="options">The options for regex.</param>
            <returns>The calculated or cached value.</returns>
        </member>
        <member name="T:Cosmos.Text.RegexUtils.Regexs">
            <summary>
            Regex Utilities<br />
            表达式工具集
            </summary>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.Regexs.IsMatch(System.String,System.String)">
            <summary>
            验证输入与模式是否匹配
            </summary>
            <param name="input">输入字符串</param>
            <param name="pattern">模式字符串</param>        
        </member>
        <member name="M:Cosmos.Text.RegexUtils.Regexs.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            验证输入与模式是否匹配
            </summary>
            <param name="input">输入的字符串</param>
            <param name="pattern">模式字符串</param>
            <param name="options">筛选条件,比如是否忽略大小写</param>
        </member>
        <member name="T:Cosmos.Text.RegexUtils.RegexTypes">
            <summary>
            This class is used to fake an enum. You'll be able to use it as an enum.
            Note: type save enum, found on stackoverflow: http://stackoverflow.com/a/424414/603309
            </summary>
        </member>
        <member name="P:Cosmos.Text.RegexUtils.RegexTypes.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Cosmos.Text.RegexUtils.RegexTypes.Value">
            <summary>
            Values
            </summary>
        </member>
        <member name="F:Cosmos.Text.RegexUtils.RegexTypes.Url">
            <summary>
            URL
            </summary>
        </member>
        <member name="F:Cosmos.Text.RegexUtils.RegexTypes.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="T:Cosmos.Text.RegexUtils.RegexVerbalExpressions">
            <summary>
            Regex verbal expressions
            </summary>
        </member>
        <member name="P:Cosmos.Text.RegexUtils.RegexVerbalExpressions.DefaultExpression">
            <summary>
            Returns a default instance of RegexVerbalExpressions
            having the Multiline option enabled
            </summary>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Add(Cosmos.Text.RegexUtils.RegexTypes)">
            <summary>
            Add
            </summary>
            <param name="regexTypes"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Add(System.String,System.Boolean)">
            <summary>
            Add
            </summary>
            <param name="value"></param>
            <param name="sanitize"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.StartOfLine(System.Boolean)">
            <summary>
            Start of line
            </summary>
            <param name="enable"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.EndOfLine(System.Boolean)">
            <summary>
            End of line
            </summary>
            <param name="enable"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Then(System.String,System.Boolean)">
            <summary>
            Then
            </summary>
            <param name="value"></param>
            <param name="sanitize"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Then(Cosmos.Text.RegexUtils.RegexTypes)">
            <summary>
            Then
            </summary>
            <param name="regexTypes"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Find(System.String)">
            <summary>
            Find
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Maybe(System.String,System.Boolean)">
            <summary>
            Maybe
            </summary>
            <param name="value"></param>
            <param name="sanitize"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Maybe(Cosmos.Text.RegexUtils.RegexTypes)">
            <summary>
            Maybe
            </summary>
            <param name="regexTypes"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Anything">
            <summary>
            Anything
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.AnythingBut(System.String,System.Boolean)">
            <summary>
            Anything but...
            </summary>
            <param name="value"></param>
            <param name="sanitize"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Something">
            <summary>
            Something
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.SomethingBut(System.String,System.Boolean)">
            <summary>
            Something but...
            </summary>
            <param name="value"></param>
            <param name="sanitize"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Replace(System.String)">
            <summary>
            Replace
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.LineBreak">
            <summary>
            Line break
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Br">
            <summary>
            Br
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Tab">
            <summary>
            Tab
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Word">
            <summary>
            Word
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.AnyOf(System.String,System.Boolean)">
            <summary>
            Any of
            </summary>
            <param name="value"></param>
            <param name="sanitize"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Any(System.String)">
            <summary>
            Any
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Range(System.Object[])">
            <summary>
            Range
            </summary>
            <param name="arguments"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Multiple(System.String,System.Boolean)">
            <summary>
            Multiple
            </summary>
            <param name="value"></param>
            <param name="sanitize"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Or(Cosmos.Text.RegexUtils.RegexTypes)">
            <summary>
            Or
            </summary>
            <param name="regexTypes"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Or(System.String,System.Boolean)">
            <summary>
            Or
            </summary>
            <param name="value"></param>
            <param name="sanitize"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.BeginCapture">
            <summary>
            Begin capture
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.BeginCapture(System.String)">
            <summary>
            Begin capture
            </summary>
            <param name="groupName"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.EndCapture">
            <summary>
            End capture
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.RepeatPrevious(System.Int32)">
            <summary>
            Repeat previous
            </summary>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.RepeatPrevious(System.Int32,System.Int32)">
            <summary>
            Repeat previous
            </summary>
            <param name="n"></param>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.AddModifier(System.Char)">
            <summary>
            Add modifier
            </summary>
            <param name="modifier"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.RemoveModifier(System.Char)">
            <summary>
            Remove modifier
            </summary>
            <param name="modifier"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.WithAnyCase(System.Boolean)">
            <summary>
            With any case
            </summary>
            <param name="enable"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.UseOneLineSearchOption(System.Boolean)">
            <summary>
            Use one lne search option
            </summary>
            <param name="enable"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.WithOptions(System.Text.RegularExpressions.RegexOptions)">
            <summary>
            With options
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Sanitize(System.String)">
            <summary>
            Sanitize
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Test(System.String)">
            <summary>
            Test
            </summary>
            <param name="toTest"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.IsMatch(System.String)">
            <summary>
            Is match
            </summary>
            <param name="toTest"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.ToRegex">
            <summary>
            To regex
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.ToString">
            <summary>
            To string
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Text.RegexUtils.RegexVerbalExpressions.Capture(System.String,System.String)">
            <summary>
            Capture
            </summary>
            <param name="toTest"></param>
            <param name="groupName"></param>
            <returns></returns>
        </member>
    </members>
</doc>
